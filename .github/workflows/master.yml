name: Master

on:
  push:
    branches:
      - master
jobs:
  bump-version:
    name: Bump Version
    if: github.event.commits[0].author.name != 'goreleaserbot'
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.bump-version.outputs.tag }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Bump version and push tag
        id: bump-version
        uses: anothrNick/github-tag-action@1.17.2
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}
          WITH_V: true
          DEFAULT_BUMP: patch

  prerelease:
    name: Create Prerelease
    needs: [bump-version]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Create Pre release
        id: prerelease
        run: |
          RELEASE_ID=$(curl --location -v -X POST 'https://api.github.com/repos/flyteorg/flytesnacks/releases' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.FLYTE_BOT_PAT }}' \
          --data-raw '{
              "tag_name": "'${{ needs.bump-version.outputs.version }}'",
              "prerelease": true
          }' | jq -r '.id')
          echo ::set-output name=release_id::$RELEASE_ID
    outputs:
      release_id: ${{ steps.prerelease.outputs.release_id }}


  trigger-release-flytesnacks-workflow:
    name: Serialize & Register Flytesnacks workflow
    needs: [prerelease]
    uses: flyteorg/flytesnacks/.github/workflows/serialize_workflow.yml@master
    secrets:
      FLYTE_BOT_PAT: ${{ secrets.FLYTE_BOT_PAT }}

  # Download artifacts again and push them to the release only if this is not a pull request
  release-workflow:
    name: Publish artifacts to github release
    runs-on: ubuntu-latest
    needs: [ trigger-release-flytesnacks-workflow ]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: setup download artifact dir
        run: |
          mkdir download-artifact
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: ./download-artifact/
      - name: Package Examples
        run: |
          mkdir -p cookbook/release-snacks
          cd download-artifact
          for i in */; do tar -czvf "../cookbook/release-snacks/${i%/}.tar.gz" "$i" & done; wait
          cd .. && sudo rm -rf download-artifact/
          cp cookbook/flyte_tests_manifest.json cookbook/release-snacks/flyte_tests_manifest.json
      - name: Release test manifest
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.FLYTE_BOT_PAT }}
          GORELEASER_CURRENT_TAG: ${{ needs.bump-version.outputs.version }}

  make-release:
    name: Mark github pre-release as Release
    needs: [ release-workflow ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
      - name: Update Release
        id: release
        run: |
          curl --location -X -v POST 'https://api.github.com/repos/flyteorg/flytesnacks/releases/${{ needs.prerelease.outputs.release_id }}' \
          --header 'Accept: application/vnd.github.v3+json' \
          --header 'Authorization: Bearer ${{ secrets.FLYTE_BOT_PAT }}' \
          --data-raw '{
              "tag_name": "'${{ needs.bump-version.outputs.version }}'",
              "prerelease": false
          }'